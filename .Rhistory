scp_upload(session, files = c(file_to_execute,
files_etc,
temp_dir),
to = file.path(project_name))
}
use_bwunicluster(session, file_to_execute = './R/eurostat_tools.R',
files_etc = c('./R/general_tools.R','./R/plot_tools.R'),
project_name = 'test2')
library(ssh)
library(tidyverse)
############################################################################## #
##### settings #################################################################
############################################################################## #
ssh_address <- "fr_ss1625@bwunicluster.scc.kit.edu"
files_local <- c("./1_randomize_MRIO_ixi.R", "./settings.R", "./functions.R")
batch_job <- "job_trade_split_ixi_MC.sh"
############################################################################## #
##### functions #################################################################
############################################################################## #
ssh_open_file <- function(file, dir = '.') {
scp_download(session, file, to = dir, verbose = FALSE)
rstudioapi::navigateToFile(file.path(dir, file))
}
ssh_install_packages <- function(session, pkgs, ...) {
ssh_exec_wait(session,
command = c("module load math/R/3.6.3",
paste0("R -e 'install.packages(\"",pkgs ,
"\" , repos=\"http://cran.us.r-project.org\")'")))
}
ssh_new_project <- function(session, project_name, ...) {
ssh_exec_wait(session,
command = paste0('mkdir ', project_name))
}
#ssh_new_project(session, 'rio_indonesia')
use_bwunicluster <- function(session,
file_to_execute,
files_etc = NULL,
project_name,
n_nodes = NA,
n_cores = NA,
time_minutes = NA,
RAM_per_node = NA,
...) {
# create directory on server
ssh_new_project(session, project_name = project_name)
# create bash script
path2template <- system.file(file.path("extdata",
"bwunicluster_bash_template.sh"),
package = "my.utils")
# write to template
print(path2template)
template_out <- whisker::whisker.render(template = readLines(path2template),
data = list(
jobname = project_name,
n_nodes = n_nodes,
n_cores = n_cores,
time_minutes = time_minutes,
RAM_per_node = RAM_per_node,
file_to_execute = file_to_execute
))
print(template_out)
# save to temp dir
temp_dir <- file.path(tempdir(), paste0(project_name, '.sh'))
writeLines(template_out, temp_dir)
# upload all files to server
scp_upload(session, files = c(file_to_execute,
files_etc,
temp_dir),
to = file.path(project_name))
}
use_bwunicluster(session, file_to_execute = './R/eurostat_tools.R',
files_etc = c('./R/general_tools.R','./R/plot_tools.R'),
project_name = 'test2')
# # 0. Connect to server -----------------------------------------------------
(session <- ssh_connect(ssh_address, verbose = TRUE))
use_bwunicluster(session, file_to_execute = './R/eurostat_tools.R',
files_etc = c('./R/general_tools.R','./R/plot_tools.R'),
project_name = 'test3')
document()
clean_session()
document()
library(devtools)
document()
library(my.utils)
load_all()
library(my.utils)
library(my.utils)
library(sf)
library(rgdal)
usethis::edit_r_profile()
usethis::edit_r_environ()
library(my.utils)
> my.utils::install_packages('collapse')
my.utils::install_packages('collapse')
library(my.utils)
my.utils::install_packages('collapse')
load_all()
my.utils::install_packages('collapse')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
job::job({
print(pkgs)
pak::pkg_install(pkg = pkgs)
},
import = c(pkgs))
}
install_packages('blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
print(pkgs)
job::job({
print(pkgs)
pak::pkg_install(pkg = pkgs)
},
import = c(pkgs))
}
install_packages('blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
print(pkgs)
job::job({
print(pkgs)
pak::pkg_install(pkg = pkgs)
},
import = c('pkgs'))
}
install_packages('blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- 'test'
job::job({
print(bla)
pak::pkg_install(pkg = pkgs)
},
import = c(pkgs, bla))
}
install_packages('blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- pkgs
job::job({
print(bla)
pak::pkg_install(pkg = bla)
},
import = c(bla))
}
install_packages('blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- pkgs
print(bla)
job::job({
print(bla)
pak::pkg_install(pkg = bla)
},
import = c(bla))
}
install_packages('blub')
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- 'lkjlkj'
print(bla)
job::job({
print(bla)
pak::pkg_install(pkg = bla)
},
import = c(bla))
}
install_packages(pkgs = 'blub')
job::job({
print(bla)
pak::pkg_install(pkg = bla)
})
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- 'lkjlkj'
print(bla)
job::job({
print(bla)
pak::pkg_install(pkg = bla)
})
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- 'lkjlkj'
print(bla)
job::empty({
print(bla)
pak::pkg_install(pkg = bla)
})
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- 'lkjlkj'
print(bla)
job::job({
print(bla)
pak::pkg_install(pkg = bla)
}, import = c(bla))
}
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- 'lkjlkj'
print(bla)
job::job({
print(bla)
#pak::pkg_install(pkg = bla)
}, import = c(bla))
}
install_packages(pkgs = 'blub')
bla <- 'lkjlkj'
print(bla)
job::job({
print(bla)
#pak::pkg_install(pkg = bla)
}, import = c(bla))
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- 'lkjlkj'
print(bla)
job::job({
print(bla)
#pak::pkg_install(pkg = bla)
}, import = c(bla), opts = NULL, packages = NULL)
}
print(bla)
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla <- 'lkjlkj'
print(bla)
job::job({
print(bla)
pak::pkg_install(pkg = bla)
}, import = c(bla), opts = NULL, packages = NULL)
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
job::job({
pak::pkg_install(pkg = pkgs)
}, import = c(pkgs), opts = NULL, packages = NULL)
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
bla = pkgs
job::job({
pak::pkg_install(pkg = bla)
}, import = c(bla), opts = NULL, packages = NULL)
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
pkgs <- pkgs
job::job({
pak::pkg_install(pkg = pkgs)
}, import = c(pkgs), opts = NULL, packages = NULL)
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
pkgs2 <- pkgs
job::job({
pak::pkg_install(pkg = pkgs2)
}, import = c(pkgs2), opts = NULL, packages = NULL)
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
pkgs2 <<- pkgs
job::job({
pak::pkg_install(pkg = pkgs2)
}, import = c(pkgs2), opts = NULL, packages = NULL)
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
print(get('pkgs', environment()))
pkgs2 <<- pkgs
job::job({
pak::pkg_install(pkg = pkgs2)
}, import = c(pkgs2), opts = NULL, packages = NULL)
}
install_packages(pkgs = 'blub')
#' Install R packages as RStudio Job
#'
#' @param pkgs Package(s) to install
#' @param ... other arguments passed to pak::pkg_install
#'
#' @return
#' @export
#'
#' @examples
install_packages <- function(pkgs) {
pkgs <- get('pkgs', environment())
#pkgs2 <<- pkgs
job::job({
pak::pkg_install(pkg = pkgs)
}, import = c(pkgs), opts = NULL, packages = NULL)
}
install_packages(pkgs = 'blub')
rm(install_packages)
library(my.utils)
install_packages('collapse')
librar
library(usethis)
usethis::edit_r_environ()
usethis::edit_r_profile()
gitcreds::gitcreds_set()
system("git --version")
gitcreds_list_helpers()
gitcreds::gitcreds_list_helpers()
paste('bla', letters)
paste('bla', letters, collapse = ' ')
paste0('bla', letters)
c('bla', letters)
paste(c('bla', letters))
paste0(c('bla', letters))
(c('bla', letters))
as.character(c('bla', letters))
library(my.utils)
library(devtools)
load_all()
document()
library(my.utils)
library(my.utils)
library(my.utils)
#' Title
#'
#' @param path
#'
#' @return
#' @export
#'
#' @examples
parse_EB3_metadata <- function(path, indices = TRUE) {
meta <- list()
meta[['products']] <- fread(file.path(path, 'products.txt'))
meta[['industries']] <- fread(file.path(path, 'industries.txt'))
meta[['unit']] <- fread(file.path(path, 'unit.txt'))
meta[['finaldemands']] <- fread(file.path(path, 'finaldemands.txt'))
if (isTRUE(indices)) {
meta[['indices_A']] <- read_EB3_A_meta(file.path(path, 'A.txt'))
meta[['indices_Y']] <- read_EB3_Y_meta(file.path(path, 'Y.txt'))
meta[['indices_S']] <- read_EB3_S_meta(file.path(path, 'satellite', 'F.txt'))
meta[['indices_va']] <- read_EB3_va_meta(file.path(path, 'satellite', 'F.txt'))
}
return(meta)
}
devtools::load_all(".")
library(my.utils)
library(my.utils)
install.packages('Rfast')
version
library(Rfast)
packageVersion('Rfast')
